{"version":3,"sources":["SnackBar.js","WebCam.js","FlashCards.js","Main.js","App.js","serviceWorker.js","index.js","network.js","logo.svg"],"names":["SnackBar","props","className","this","word","Icon","iconName","Component","WebCam","detectFromVideoFrame","model","video","detect","then","predictions","showDetections","requestAnimationFrame","error","console","log","checkClick","e","that","x","pageX","canvasRef","current","offsetLeft","y","pageY","offsetTop","forEach","p","setState","addedWord","clearInterval","interval","setInterval","ctx","getContext","clearRect","canvas","width","height","font","textBaseline","prediction","class","bbox","push","strokeStyle","lineWidth","strokeRect","fillStyle","textWidth","measureText","textHeight","parseInt","fillRect","fillText","score","toFixed","state","isloaded","bind","updateTranslateWindow","videoRef","createRef","styles","position","marginLeft","marginRight","left","right","navigator","mediaDevices","getUserMedia","webkitGetUserMedia","webcamPromise","audio","stream","window","srcObject","Promise","resolve","onloadedmetadata","loadlModelPromise","cocoSsd","all","values","catch","r","getTranslation","language","TranslateWindow","definition","pronunc","transWord","screen","translateWindow","style","cursor","facingMode","ref","onClick","opacity","fontSize","fontWeight","marginBottom","FlashCards","flashcard","currentWordIndex","words","Grid","container","spacing","item","xs","id","document","getElementById","transform","top","Main","isFlashCards","default","isScan","langauge","background","updateState","dropdownAction","body","getElementsByTagName","animation","key","Button","variant","color","DropDown","action","SimpleBottomNavigation","useStyles","makeStyles","root","classes","sets","0","1","2","BottomNavigation","onChange","event","newValue","showLabels","BottomNavigationAction","label","icon","dropdownStyles","dropdown","stackTokens","childrenGap","options","text","Stack","tokens","Dropdown","placeHolder","defaultSelectedKey","disabled","App","Boolean","location","hostname","match","ReactDOM","render","initializeIcons","serviceWorker","ready","registration","unregister","url","host","module","exports","addWord","getWords","Object","keys","fetch","method","headers","JSON","stringify","res","json","resp"],"mappings":"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","file":"static/js/main.6d6b93f4.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { Icon } from 'office-ui-fabric-react/lib/Icon';\r\n\r\n\r\nexport default class SnackBar extends Component {\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className = \"snackbar\">\r\n                <div className = \"snackbar-text\">\r\n                    {\"Added \" + this.props.word}\r\n                </div>\r\n                <div className = \"snackbar-icon\">\r\n                    <Icon iconName = {\"SkypeCheck\"}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component, createRef } from 'react'\r\nimport * as cocoSsd from '@tensorflow-models/coco-ssd';\r\n\r\nimport {getTranslation} from \"./network.js\";\r\n\r\nimport SnackBar from \"./SnackBar.js\";\r\n/*\r\nexport default class WebCam extends Component {\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.update = this.update.bind(this);\r\n    }\r\n    componentDidMount()\r\n    {\r\n        //video dimensions\r\n        const constraints = {\r\n            video: {width: {exact: 900}, height: {exact: 700}}\r\n        };\r\n\r\n        \r\n        const video = document.getElementById(\"webcam-dom\");\r\n        \r\n        navigator.mediaDevices.getUserMedia(constraints).\r\n        then((stream) => {\r\n            video.srcObject = stream;\r\n        });\r\n    }\r\n\r\n    update(){\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className = \"webcam\" onClick = {(e) => {\r\n                console.log(e);\r\n                console.log(e.pageX);\r\n                console.log(e.pageY);\r\n            }}>\r\n                <video id = \"webcam-dom\" autoPlay></video>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n*/\r\n\r\nexport default class WebCam extends Component {\r\n\r\n    constructor(props){\r\n      super(props);\r\n\r\n      this.predictions = [];\r\n      this.state = {\r\n        isloaded: false,\r\n        word: \"\",\r\n        addedWord: false\r\n      }\r\n\r\n      this.checkClick = this.checkClick.bind(this);\r\n\r\n      this.interval = null;\r\n\r\n      \r\n          // reference to both the video and canvas\r\n    this.updateTranslateWindow = this.updateTranslateWindow.bind(this);\r\n    this.videoRef = createRef();\r\n    this.canvasRef = createRef();\r\n\r\n    \r\n    // we are gonna use inline style\r\n    this.styles = {\r\n      position: 'fixed',\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n      left: 0,\r\n      right: 0\r\n    };\r\n     }\r\n  \r\n  \r\n    detectFromVideoFrame = (model, video) => {\r\n      model.detect(video).then(predictions => {\r\n        this.showDetections(predictions);\r\n  \r\n        requestAnimationFrame(() => {\r\n          this.detectFromVideoFrame(model, video);\r\n        });\r\n      }, (error) => {\r\n        console.log(\"Couldn't start the webcam\")\r\n        console.error(error)\r\n      });\r\n    };\r\n\r\n    checkClick = (e) => {\r\n      var that = this;\r\n\r\n\r\n      var x = (e.pageX - this.canvasRef.current.offsetLeft);\r\n      var y = (e.pageY - this.canvasRef.current.offsetTop);\r\n\r\n      this.predictions.forEach((p) => {\r\n        console.log(\"aaa\");\r\n        if( (x > p[0])&&(x < (p[0] + p[2]) )&&(y > p[1])&&(y < (p[1] + p[3]) ) ){\r\n          //do something with p[4]\r\n          this.setState({\r\n            word: p[4],\r\n            addedWord: true\r\n          })\r\n        }\r\n      });\r\n\r\n        //clearing the snackbar\r\n        clearInterval(this.interval);\r\n\r\n        this.interval =  setInterval(()=> {\r\n          this.setState({\r\n            addedWord: false\r\n          })\r\n          clearInterval(that.setInterval);\r\n        }, 3000)\r\n      }\r\n\r\n    \r\n  \r\n    showDetections = predictions => {\r\n      const ctx = this.canvasRef.current.getContext(\"2d\");\r\n      ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n      const font = \"24px helvetica\";\r\n      ctx.font = font;\r\n      ctx.textBaseline = \"top\";\r\n      \r\n      this.predictions = [];\r\n      predictions.forEach(prediction => {\r\n      \r\n        if(prediction.class === \"person\"){\r\n          return;\r\n        }\r\n\r\n        const y = prediction.bbox[0] + (175 * prediction.bbox[0]/600);\r\n        const x = prediction.bbox[1] + (175 * prediction.bbox[0]/600);\r\n        const width = prediction.bbox[2];\r\n        const height = prediction.bbox[3];\r\n\r\n        this.predictions.push([x, y, width, height, prediction.class]);\r\n\r\n        // Draw the bounding box.\r\n        ctx.strokeStyle = \"#2fff00\";\r\n        ctx.lineWidth = 1;\r\n        ctx.strokeRect(x, y, width, height);\r\n        // Draw the label background.\r\n        ctx.fillStyle = \"#2fff00\";\r\n        const textWidth = ctx.measureText(prediction.class).width;\r\n        const textHeight = parseInt(font, 10);\r\n        // draw top left rectangle\r\n        ctx.fillRect(x, y, textWidth + 10, textHeight + 10);\r\n        // draw bottom left rectangle\r\n        ctx.fillRect(x, y + height - textHeight, textWidth + 15, textHeight + 10);\r\n  \r\n        // Draw the text last to ensure it's on top.\r\n        ctx.fillStyle = \"#000000\";\r\n        ctx.fillText(prediction.class, x, y);\r\n        ctx.fillText(prediction.score.toFixed(2), x, y + height - textHeight);\r\n      });\r\n    };\r\n\r\n  \r\n    \r\n    componentDidMount() {\r\n      if (navigator.mediaDevices.getUserMedia || navigator.mediaDevices.webkitGetUserMedia) {\r\n        // define a Promise that'll be used to load the webcam and read its frames\r\n        const webcamPromise = navigator.mediaDevices\r\n          .getUserMedia({\r\n            video: true,\r\n            audio: false,\r\n          })\r\n          .then(stream => {\r\n            // pass the current frame to the window.stream\r\n            window.stream = stream;\r\n            // pass the stream to the videoRef\r\n            this.videoRef.current.srcObject = stream;\r\n            \r\n            return new Promise(resolve => {\r\n              this.videoRef.current.onloadedmetadata = () => {\r\n                resolve();\r\n              };\r\n            });\r\n          }, (error) => {\r\n            console.log(\"Couldn't start the webcam\")\r\n            console.error(error)\r\n          });\r\n\r\n        // define a Promise that'll be used to load the model\r\n        const loadlModelPromise = cocoSsd.load();\r\n        \r\n        // resolve all the Promises\r\n       \r\n        Promise.all([loadlModelPromise, webcamPromise])\r\n          .then(values => {\r\n            this.detectFromVideoFrame(values[0], this.videoRef.current);\r\n          })\r\n          .catch(error => {\r\n            console.error(error);\r\n          });\r\n\r\n\r\n      }\r\n    }\r\n\r\n    componentWillUnmount(){\r\n      clearInterval(this.interval);\r\n    }\r\n\r\n    updateTranslateWindow(){\r\n      var r = getTranslation(this.state.word, this.props.language);\r\n      console.log(\"translated word\", r);\r\n      if (r != null){\r\n        return null;\r\n      } else {\r\n        return (<TranslateWindow definition = {r[\"definition\"]} \r\n        word = {this.state.word} pronunc = {r[\"translated_pron\"]}\r\n        transWord = {r[\"translated_word\"]} />)\r\n      }\r\n    }\r\n\r\n  \r\n    // here we are returning the video frame and canvas to draw,\r\n    // so we are in someway drawing our video \"on the go\"\r\n    render() {\r\n        var that = this;\r\n        var vidwidth = window.screen.width;\r\n        var vidheight = window.screen.height;\r\n\r\n        var translateWindow = (this.state.addedWord == true) ? this.updateTranslateWindow() : null;\r\n      return (\r\n        <div className = \"webcam\">\r\n          {translateWindow}\r\n          {this.state.addedWord && <SnackBar word = {this.state.word}/>}\r\n          <video\r\n            style = {{cursor:\"pointer\"}}\r\n            facingMode=\"environment\"\r\n            style={this.styles}\r\n            autoPlay\r\n            muted\r\n            ref={this.videoRef}\r\n            width=\"800px\"\r\n            height=\"600px\"\r\n          />\r\n          <canvas style={this.styles} ref={this.canvasRef} width=\"800px\" height=\"600px\" \r\n          onClick = {this.checkClick}/>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n\r\n  function TranslateWindow(props){\r\n    return (\r\n      <div className = \"translate-window\">\r\n          <div style = {{opacity: 0.4, fontSize: \"10pt\"}}>Translated Word</div>\r\n          <div style = {{fontSize: \"13pt\", fontWeight: 800}}>{props.transWord}</div>\r\n          <div>{(props.pronunc != null) ? props.pronunc : \"\"}</div>\r\n          <div style = {{opacity: 0.4, fontSize: \"11pt\", marginBottom: \"-5px\"}}>Definition</div>\r\n          <h5> {props.word}</h5>\r\n          <div>{props.definition}</div>\r\n      </div>\r\n    )\r\n  }","import React, { Component } from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport { Icon } from 'office-ui-fabric-react/lib/Icon';\r\n\r\nexport default class FlashCards extends Component {\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n\r\n        this.state = {\r\n            flashcard: true,\r\n            currentWordIndex: 0, \r\n            words: []\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n    }\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    render() {\r\n\r\n        return (\r\n            <div className = \"flashcards\">\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={12}>\r\n                        <div className = \"maincontainer\">\r\n                            <div className = \"flashcard\" id = \"flashcard-word\" onClick = {() => {\r\n                                this.setState({\r\n                                    flashcard: !this.state.flashcard\r\n                                }, () => {\r\n                                    var flashcard = document.getElementById(\"flashcard-word\");\r\n                                    (!this.state.flashcard) ? flashcard.style.transform = \"rotateY(180deg)\" : flashcard.style.transform = \"rotateY(0)\";\r\n                                })\r\n                            }}>\r\n                                <div class=\"thefront\">\r\n                                    <div>\r\n                                        {\"Cat\"}\r\n                                    </div>\r\n                                    <div className = \"partofspeech\">\r\n                                        {\"Noun\"}\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"theback\">{\"El Gato\"}</div>\r\n                                \r\n                            </div>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <div style = {{\r\n                            position: \"absolute\",\r\n                            top: \"50%\"\r\n                        }}>\r\n                            <div className = \"for-back\">\r\n                                <Icon iconName = \"Back\"/>\r\n                            </div>\r\n                            <div className = \"for-back\">\r\n                                <Icon iconName = \"Forward\"/>\r\n                            </div>\r\n                        </div>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={6}>\r\n                        <div className = \"wordlist\">\r\n                            helloasdasd\r\n                            asd\r\n                            asd\r\n                            as\r\n                            das\r\n                            dsss\r\n                        </div>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={6}>\r\n                        <div className = \"word-definition\">\r\n                            <div className = \"word-def-title\">Definition</div>\r\n                            <div className = \"word-def-text\">{}</div>\r\n                        </div>\r\n                    </Grid>\r\n                    \r\n                </Grid>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport WebCam from \"./WebCam.js\";\r\nimport FlashCards from \"./FlashCards.js\";\r\n\r\nimport AddAPhotoIcon from '@material-ui/icons/AddAPhoto';\r\nimport EmojiObjectsIcon from '@material-ui/icons/EmojiObjects';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\n\r\n\r\nimport { IStackTokens, Stack } from 'office-ui-fabric-react/lib/Stack';\r\nimport { Dropdown, DropdownMenuItemType, IDropdownStyles, IDropdownOption } from 'office-ui-fabric-react/lib/Dropdown';\r\n\r\nexport default class Main extends Component {\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            isFlashCards: false,\r\n            default: true,\r\n            isScan: false,\r\n            langauge: \"es\"\r\n        }\r\n\r\n        this.background = this.background.bind(this);\r\n        this.background(this.state);\r\n\r\n        this.updateState = this.updateState.bind(this);\r\n\r\n        this.dropdownAction = this.dropdownAction.bind(this);\r\n    }\r\n\r\n    updateState(state){\r\n        console.log(state);\r\n        this.setState(state);\r\n    }\r\n\r\n    background(state){\r\n        console.log(\"state\", state);\r\n        var body = document.getElementsByTagName(\"BODY\")[0];\r\n        console.log(body.style);\r\n        body.style.animation = \"gradientFlow 5s infinite linear\";\r\n    }\r\n\r\n    dropdownAction(e, key){\r\n        console.log(key.key);\r\n        this.setState(\r\n            {\r\n                language: key.key\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className = \"Main\">\r\n                <div className = \"Main-container\">\r\n                    <div className = \"Main-content\">\r\n                        {this.state.isFlashCards && (<FlashCards/>)}\r\n                        {this.state.isScan && (<WebCam language = {this.state.language}/>)}\r\n                        {\r\n                            this.state.default && \r\n\r\n                        (\r\n                            <div className = \"main-buttons\">\r\n                                <div className = \"main-title\">If its not you then its hella bs</div>\r\n                                <div className = \"main-content-button\">\r\n                                    <Button variant=\"contained\" color = \"primary\" onClick = {() => {\r\n        \r\n                                    this.setState({\r\n                                        isScan: true,\r\n                                        default: false\r\n                                    }, () => {\r\n                                        this.background(this.state);\r\n                                    })\r\n                                }}>\r\n                                        Scan\r\n                                    </Button>\r\n                                </div>\r\n                                <div className = \"main-content-button\">\r\n                                    <Button variant=\"contained\" color = \"secondary\" onClick = {() => {\r\n                                        this.setState({\r\n                                            default: false,\r\n                                            isScan: false,\r\n                                            isFlashCards: true\r\n                                        })\r\n                                    }}>\r\n                                        Practice\r\n                                    </Button>\r\n                                </div>\r\n                                <div className = \"main-drop-down\">\r\n                                    <DropDown action = {this.dropdownAction}/>\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className = \"navbar\">\r\n                    <SimpleBottomNavigation setState = {this.updateState}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n      width: \"100%\",\r\n    },\r\n  });\r\n\r\nfunction SimpleBottomNavigation(props) {\r\n    const classes = useStyles();\r\n  \r\n    var sets = {\r\n        0 : {   isFlashCards: false,\r\n                default: false,\r\n                isScan: true\r\n            },\r\n        1 : {   isFlashCards: false,\r\n            default: true,\r\n            isScan: false\r\n        },\r\n        2:  {   isFlashCards: true,\r\n            default: false,\r\n            isScan: false\r\n        } \r\n    }\r\n    return (\r\n      <BottomNavigation\r\n        onChange={(event, newValue) => {\r\n            props.setState(sets[newValue]);\r\n        }}\r\n        showLabels\r\n        className={classes.root}\r\n      >\r\n        <BottomNavigationAction label=\"Scan\"  icon = {<AddAPhotoIcon/>}/>\r\n        <BottomNavigationAction label=\"Home\"  icon = {<HomeIcon/>}/>\r\n        <BottomNavigationAction label=\"Practice\"  icon = {<EmojiObjectsIcon/>}/>\r\n      </BottomNavigation>\r\n    );\r\n  }\r\n\r\n  const dropdownStyles = {\r\n    dropdown: { width: 300 }\r\n  };\r\n  const stackTokens = { childrenGap: 20 };\r\nconst options = [\r\n    {\r\n        key: \"es\",\r\n        text: \"Spanish\"\r\n    },\r\n    {\r\n        key: \"fr\",\r\n        text: \"French\"\r\n    },\r\n    {\r\n        key: \"zh-cn\",\r\n        text: \"Chinese\"\r\n    },\r\n    {\r\n        key: \"ja\",\r\n        text: \"Japanese\"\r\n    },\r\n    {\r\n        key: \"ko\",\r\n        text: \"Korean\"\r\n    }\r\n  ];\r\n\r\nfunction DropDown(props){\r\n    return (\r\n        <Stack tokens={stackTokens}>\r\n          <Dropdown\r\n            onChange = {props.action}\r\n            placeHolder = \"Select\"\r\n            label=\"Select a Language\"\r\n            defaultSelectedKey=\"Spanish\"\r\n            options={options}\r\n            disabled={false}\r\n            styles={dropdownStyles}\r\n          />\r\n        </Stack>\r\n      );\r\n}","import React from 'react';\nimport logo from './logo.svg';\nimport Main from './Main.js';\nimport './App.css';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Main/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { initializeIcons } from '@uifabric/icons';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\ninitializeIcons();\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","var url = \"https://\" + window.location.host;\r\n\r\nvar translated = {};\r\n\r\nvar words = {};\r\n\r\nmodule.exports = {\r\n    addWord: function(word){\r\n        words[word] = true;\r\n    },\r\n\r\n    getWords: function(word){\r\n        return Object.keys(words);\r\n    },\r\n\r\n\r\n    getTranslation: function(word, language){\r\n        console.log(\"url\",url);\r\n        console.log(\"word\", word);\r\n        console.log(\"lang\", language);\r\n        \r\n        fetch(url + \"/translate\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            }, \r\n            body:JSON.stringify({\r\n                \"word\": word,\r\n                \"language\": language\r\n            }) \r\n        }).then(res => res.json()).then(function(resp){\r\n            console.log(resp);\r\n            return resp[\"result\"];\r\n        }).catch(error => {\r\n            console.log(error);\r\n        });\r\n\r\n        return null;\r\n    }\r\n}","module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";"],"sourceRoot":""}