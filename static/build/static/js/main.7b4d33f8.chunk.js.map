{"version":3,"sources":["img/logo.png","logo.svg","SnackBar.js","WebCam.js","FlashCards.js","Main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","SnackBar","props","className","this","word","Icon","iconName","Component","WebCam","detectFromVideoFrame","model","video","detect","then","predictions","showDetections","requestAnimationFrame","error","console","log","checkClick","e","that","x","pageX","canvasRef","current","offsetLeft","y","pageY","offsetTop","forEach","p","setState","addedWord","updateTranslateWindow","state","clearInterval","interval","setInterval","ctx","getContext","clearRect","canvas","width","height","font","textBaseline","prediction","class","bbox","push","strokeStyle","lineWidth","strokeRect","fillStyle","textWidth","measureText","textHeight","parseInt","fillRect","fillText","isloaded","data","js","loaded","bind","videoRef","createRef","styles","position","marginLeft","marginRight","left","right","navigator","mediaDevices","getUserMedia","webkitGetUserMedia","webcamPromise","audio","stream","window","srcObject","Promise","resolve","onloadedmetadata","loadlModelPromise","cocoSsd","all","values","catch","url","location","host","getTranslation","language","callback","a","fetch","method","headers","body","JSON","stringify","res","json","resp","r","TranslateWindow","definition","pronunc","transWord","screen","translateWindow","Loader","style","cursor","facingMode","ref","onClick","count","map","d","i","key","opacity","fontSize","fontWeight","marginBottom","Spinner","size","SpinnerSize","large","FlashCards","flashcard","currentWordIndex","words","wordsList","currentIndex","defs","handleWordClick","Object","keys","index","length","document","getElementById","transform","def","WordList","Grid","container","spacing","item","xs","id","handleFlashcard","top","prev","next","Button","variant","color","updateData","Main","isFlashCards","default","isScan","background","updateState","dropdownAction","getElementsByTagName","animation","src","logo","DropDown","action","SimpleBottomNavigation","useStyles","makeStyles","root","classes","sets","0","1","2","BottomNavigation","onChange","event","newValue","showLabels","BottomNavigationAction","label","icon","dropdownStyles","dropdown","stackTokens","childrenGap","options","text","Stack","tokens","Dropdown","placeHolder","defaultSelectedKey","disabled","App","Boolean","hostname","match","ReactDOM","render","initializeIcons","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7b4d33f8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.2c7174f9.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import React, { Component } from 'react'\r\nimport { Icon } from 'office-ui-fabric-react/lib/Icon';\r\n\r\n\r\nexport default class SnackBar extends Component {\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className = \"snackbar\">\r\n                <div className = \"snackbar-text\">\r\n                    {\"Added \" + this.props.word}\r\n                </div>\r\n                <div className = \"snackbar-icon\">\r\n                    <Icon iconName = {\"SkypeCheck\"}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component, createRef } from 'react'\r\nimport * as cocoSsd from '@tensorflow-models/coco-ssd';\r\n\r\nimport SnackBar from \"./SnackBar.js\";\r\nimport { thisExpression } from '@babel/types';\r\n\r\nimport { Spinner, SpinnerSize } from 'office-ui-fabric-react/lib/Spinner';\r\n/*\r\nexport default class WebCam extends Component {\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.update = this.update.bind(this);\r\n    }\r\n    componentDidMount()\r\n    {\r\n        //video dimensions\r\n        const constraints = {\r\n            video: {width: {exact: 900}, height: {exact: 700}}\r\n        };\r\n\r\n        \r\n        const video = document.getElementById(\"webcam-dom\");\r\n        \r\n        navigator.mediaDevices.getUserMedia(constraints).\r\n        then((stream) => {\r\n            video.srcObject = stream;\r\n        });\r\n    }\r\n\r\n    update(){\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className = \"webcam\" onClick = {(e) => {\r\n                console.log(e);\r\n                console.log(e.pageX);\r\n                console.log(e.pageY);\r\n            }}>\r\n                <video id = \"webcam-dom\" autoPlay></video>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n*/\r\n\r\nexport default class WebCam extends Component {\r\n\r\n    constructor(props){\r\n      super(props);\r\n\r\n      this.predictions = [];\r\n      this.state = {\r\n        isloaded: false,\r\n        word: \"\",\r\n        addedWord: false,\r\n        data: {\r\n          js: null,\r\n          loaded: true\r\n        }\r\n      }\r\n\r\n      this.checkClick = this.checkClick.bind(this);\r\n\r\n      this.interval = null;\r\n\r\n      \r\n          // reference to both the video and canvas\r\n    this.updateTranslateWindow = this.updateTranslateWindow.bind(this);\r\n    this.videoRef = createRef();\r\n    this.canvasRef = createRef();\r\n\r\n    \r\n    // we are gonna use inline style\r\n    this.styles = {\r\n      position: 'fixed',\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n      left: 0,\r\n      right: 0\r\n    };\r\n     }\r\n  \r\n  \r\n    detectFromVideoFrame = (model, video) => {\r\n      model.detect(video).then(predictions => {\r\n        this.showDetections(predictions);\r\n  \r\n        requestAnimationFrame(() => {\r\n          this.detectFromVideoFrame(model, video);\r\n        });\r\n      }, (error) => {\r\n        console.log(\"Couldn't start the webcam\")\r\n        console.error(error)\r\n      });\r\n    };\r\n\r\n    checkClick = (e) => {\r\n      var that = this;\r\n\r\n\r\n      var x = (e.pageX - this.canvasRef.current.offsetLeft);\r\n      var y = (e.pageY - this.canvasRef.current.offsetTop);\r\n\r\n      this.predictions.forEach((p) => {\r\n        console.log(\"aaa\");\r\n        if( (x > p[0])&&(x < (p[0] + p[2]) )&&(y > p[1])&&(y < (p[1] + p[3]) ) ){\r\n          //do something with p[4]\r\n          this.setState({\r\n            word: p[4],\r\n            addedWord: true\r\n          }, () => {\r\n            this.updateTranslateWindow(this.state.word);\r\n          })\r\n        }\r\n      });\r\n\r\n        \r\n        //clearing the snackbar\r\n        clearInterval(this.interval);\r\n\r\n        this.interval =  setInterval(()=> {\r\n          this.setState({\r\n            addedWord: false\r\n          })\r\n          clearInterval(that.setInterval);\r\n        }, 3000)\r\n\r\n      }\r\n\r\n    \r\n  \r\n    showDetections = predictions => {\r\n      const ctx = this.canvasRef.current.getContext(\"2d\");\r\n      ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n      const font = \"24px helvetica\";\r\n      ctx.font = font;\r\n      ctx.textBaseline = \"top\";\r\n      \r\n      this.predictions = [];\r\n      predictions.forEach(prediction => {\r\n      \r\n        if(prediction.class === \"person\"){\r\n          return;\r\n        }\r\n\r\n        const x = prediction.bbox[0] + (175 * prediction.bbox[0]/600);\r\n        const y = prediction.bbox[1] + (175 * prediction.bbox[0]/600);\r\n        const width = prediction.bbox[2];\r\n        const height = prediction.bbox[3];\r\n\r\n        this.predictions.push([x, y, width, height, prediction.class]);\r\n\r\n        // Draw the bounding box.\r\n        ctx.strokeStyle = \"#2fff00\";\r\n        ctx.lineWidth = 1;\r\n        ctx.strokeRect(x, y, width, height);\r\n        // Draw the label background.\r\n        ctx.fillStyle = \"#2fff00\";\r\n        const textWidth = ctx.measureText(prediction.class).width;\r\n        const textHeight = parseInt(font, 10);\r\n        // draw top left rectangle\r\n        ctx.fillRect(x, y, textWidth + 10, textHeight + 10);\r\n        // draw bottom left rectangle\r\n        //ctx.fillRect(x, y + height - textHeight, textWidth + 15, textHeight + 10);\r\n  \r\n        // Draw the text last to ensure it's on top.\r\n        ctx.fillStyle = \"#000000\";\r\n        ctx.fillText(prediction.class, x, y);\r\n        //ctx.fillText(prediction.score.toFixed(2), x, y + height - textHeight);\r\n      });\r\n    };\r\n\r\n  \r\n    \r\n    componentDidMount() {\r\n      if (navigator.mediaDevices.getUserMedia || navigator.mediaDevices.webkitGetUserMedia) {\r\n        // define a Promise that'll be used to load the webcam and read its frames\r\n        const webcamPromise = navigator.mediaDevices\r\n          .getUserMedia({\r\n            video: true,\r\n            audio: false,\r\n          })\r\n          .then(stream => {\r\n            // pass the current frame to the window.stream\r\n            window.stream = stream;\r\n            // pass the stream to the videoRef\r\n            this.videoRef.current.srcObject = stream;\r\n            \r\n            return new Promise(resolve => {\r\n              this.videoRef.current.onloadedmetadata = () => {\r\n                resolve();\r\n              };\r\n            });\r\n          }, (error) => {\r\n            console.log(\"Couldn't start the webcam\")\r\n            console.error(error)\r\n          });\r\n\r\n        // define a Promise that'll be used to load the model\r\n        const loadlModelPromise = cocoSsd.load();\r\n        \r\n        // resolve all the Promises\r\n       \r\n        Promise.all([loadlModelPromise, webcamPromise])\r\n          .then(values => {\r\n            this.setState({\r\n              loaded: false\r\n            })\r\n            this.detectFromVideoFrame(values[0], this.videoRef.current);\r\n          })\r\n          .catch(error => {\r\n            console.error(error);\r\n          });\r\n\r\n\r\n      }\r\n    }\r\n\r\n    componentWillUnmount(){\r\n      clearInterval(this.interval);\r\n    }\r\n\r\n    updateTranslateWindow(word){\r\n      var url = \"https://\" + window.location.host;\r\n      async function getTranslation(word, language, callback){\r\n        console.log(\"url\",url);\r\n        console.log(\"word\", word);\r\n        console.log(\"lang\", language);\r\n        \r\n        await fetch(url + \"/translate\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            }, \r\n            body:JSON.stringify({\r\n                \"word\": word,\r\n                \"language\": language\r\n            }) \r\n        }).then(res => res.json()).then(function(resp){\r\n            console.log(resp[\"result\"]);\r\n            callback(resp[\"result\"]);\r\n        }).catch(error => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n      (async () => {\r\n        await getTranslation(word, this.props.language, (r) => {\r\n          this.setState({\r\n            data: {\r\n              js: (<TranslateWindow definition = {r[\"definition\"]} \r\n              word = {this.state.word} pronunc = {r[\"translated_pron\"]}\r\n              transWord = {r[\"translated_word\"]} />),\r\n              loaded: true\r\n            }\r\n          })\r\n        })\r\n      })()\r\n\r\n    }\r\n\r\n  \r\n    // here we are returning the video frame and canvas to draw,\r\n    // so we are in someway drawing our video \"on the go\"\r\n    render() {\r\n        var that = this;\r\n        var vidwidth = window.screen.width;\r\n        var vidheight = window.screen.height;\r\n\r\n        var translateWindow = (this.state.data.loaded) ? this.state.data.js : null;\r\n      return (\r\n        <div className = \"webcam\">\r\n          {this.state.loaded && (<Loader/>)}\r\n          {translateWindow}\r\n          {this.state.addedWord && <SnackBar word = {this.state.word}/>}\r\n          <video\r\n            style = {{cursor:\"pointer\"}}\r\n            facingMode=\"environment\"\r\n            style={this.styles}\r\n            autoPlay\r\n            muted\r\n            ref={this.videoRef}\r\n            width=\"800px\"\r\n            height=\"600px\"\r\n          />\r\n          <canvas style={this.styles} ref={this.canvasRef} width=\"800px\" height=\"600px\" \r\n          onClick = {this.checkClick}/>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n\r\n  function TranslateWindow(props){\r\n    var count = 1;\r\n    var defs = props.definition.map((d, i) => {\r\n      count++;\r\n      return (<div key = {i}>{`${count}. ` + 'd'}</div>); \r\n    }\r\n    )\r\n    return (\r\n      <div className = \"translate-window\">\r\n          <div style = {{opacity: 0.4, fontSize: \"10pt\"}}>Translated Word</div>\r\n          <div style = {{fontSize: \"13pt\", fontWeight: 800}}>{props.transWord}</div>\r\n          <div>{(props.pronunc != null) ? props.pronunc : \"\"}</div>\r\n          <div style = {{opacity: 0.4, fontSize: \"11pt\", marginBottom: \"-5px\"}}>Definition</div>\r\n          <h5> {props.word}</h5>\r\n          <div>{props.definition}</div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  function Loader(){\r\n    return (\r\n      <div className = \"loader\">\r\n        <Spinner size={SpinnerSize.large} />\r\n      </div>\r\n    )\r\n  }","import React, { Component } from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport { Icon } from 'office-ui-fabric-react/lib/Icon';\r\n\r\n\r\nvar data = {\r\n    \"airplane\": {\r\n      \"definition\": [\r\n        \"an aircraft that has a fixed wing and is powered by propellers or jets\"\r\n      ],\r\n      \"translated_pron\": \"Fēijī\",\r\n      \"translated_word\": \"飞机\"\r\n    },\r\n    \"apple\": {\r\n      \"definition\": [\r\n        \"native Eurasian tree widely cultivated in many varieties for its firm rounded edible fruits\",\r\n        \"fruit with red or yellow or green skin and sweet to tart crisp whitish flesh\"\r\n      ],\r\n      \"translated_pron\": null,\r\n      \"translated_word\": \"Pomme\"\r\n    },\r\n    \"banana\": {\r\n      \"definition\": [\r\n        \"any of several tropical and subtropical treelike herbs of the genus Musa having a terminal crown of large entire leaves and usually bearing hanging clusters of elongated fruits\",\r\n        \"elongated crescent-shaped yellow fruit with soft sweet flesh\"\r\n      ],\r\n      \"translated_pron\": \"banana\",\r\n      \"translated_word\": \"바나나\"\r\n    },\r\n    \"baseballbat\": {\r\n      \"definition\": [\r\n        \"an implement used in baseball by the batter\"\r\n      ],\r\n      \"translated_pron\": null,\r\n      \"translated_word\": \"棒球棒\"\r\n    },\r\n    \"bed\": {\r\n      \"definition\": [\r\n        \"a depression forming the ground under a body of water\",\r\n        \"have sexual intercourse with\",\r\n        \"single thickness of usually some homogeneous substance\",\r\n        \"prepare for sleep\",\r\n        \"a stratum of ore or coal thick enough to be mined with profit\",\r\n        \"a foundation of earth or rock supporting a road or railroad track\",\r\n        \"a piece of furniture that provides a place to sleep\",\r\n        \"a plot of ground in which plants are growing\",\r\n        \"furnish with a bed\",\r\n        \"(geology) a stratum of rock (especially sedimentary rock)\",\r\n        \"place (plants) in a prepared bed of soil\",\r\n        \"put to bed\",\r\n        \"the flat surface of a printing press on which the type form is laid in the last stage of producing a newspaper or magazine or book etc.\"\r\n      ],\r\n      \"translated_pron\": \"chimdae\",\r\n      \"translated_word\": \"침대\"\r\n    },\r\n    \"bird\": {\r\n      \"definition\": [\r\n        \"informal terms for a (young) woman\",\r\n        \"badminton equipment consisting of a ball of cork or rubber with a crown of feathers\",\r\n        \"a cry or noise made to express displeasure or contempt\",\r\n        \"watch and study birds in their natural habitat\",\r\n        \"the flesh of a bird or fowl (wild or domestic) used as food\",\r\n        \"warm-blooded egg-laying vertebrates characterized by feathers and forelimbs modified as wings\"\r\n      ],\r\n      \"translated_pron\": \"Niǎo\",\r\n      \"translated_word\": \"鸟\"\r\n    },\r\n    \"bottle\": {\r\n      \"definition\": [\r\n        \"the quantity contained in a bottle\",\r\n        \"a vessel fitted with a flexible teat and filled with milk or formula; used as a substitute for breast feeding infants and very young children\",\r\n        \"a glass or plastic vessel used for storing drinks or other liquids; typically cylindrical without handles and with a narrow neck that can be plugged or capped\",\r\n        \"put into bottles\",\r\n        \"store (liquids or gases) in bottles\"\r\n      ],\r\n      \"translated_pron\": null,\r\n      \"translated_word\": \"bouteille\"\r\n    },\r\n    \"bowl\": {\r\n      \"definition\": [\r\n        \"a small round container that is open at the top for holding tobacco\",\r\n        \"a large ball with finger holes used in the sport of bowling\",\r\n        \"the quantity contained in a bowl\",\r\n        \"the act of rolling something (as the ball in bowling)\",\r\n        \"a large structure for open-air sports or entertainments\",\r\n        \"a concave shape with an open top\",\r\n        \"a dish that is round and open at the top for serving foods\",\r\n        \"a round vessel that is open at the top; used chiefly for holding food or liquids\",\r\n        \"a wooden ball (with flattened sides so that it rolls on a curved course) used in the game of lawn bowling\",\r\n        \"engage in the sport of bowling\",\r\n        \"hurl a cricket ball from one end of the pitch towards the batsman at the other end\",\r\n        \"roll (a ball)\"\r\n      ],\r\n      \"translated_pron\": null,\r\n      \"translated_word\": \"bol\"\r\n    },\r\n    \"car\": {\r\n      \"definition\": [\r\n        \"a motor vehicle with four wheels; usually propelled by an internal combustion engine\",\r\n        \"the compartment that is suspended from an airship and that carries personnel and the cargo and the power plant\",\r\n        \"where passengers ride up and down\",\r\n        \"a wheeled vehicle adapted to the rails of railroad\",\r\n        \"a conveyance for passengers or freight on a cable railway\"\r\n      ],\r\n      \"translated_pron\": \"Qìchē\",\r\n      \"translated_word\": \"汽车\"\r\n    },\r\n    \"cat\": {\r\n      \"definition\": [\r\n        \"a large tracked vehicle that is propelled by two endless metal belts; frequently used for moving earth in construction and farm work\",\r\n        \"feline mammal usually having thick soft fur and no ability to roar: domestic cats; wildcats\",\r\n        \"a whip with nine knotted cords\",\r\n        \"the leaves of the shrub Catha edulis which are chewed like tobacco or used to make tea; has the effect of a euphoric stimulant\",\r\n        \"a method of examining body organs by scanning them with X rays and using a computer to construct a series of cross-sec\"],\r\n        \"translated_pron\": \"Qìchē\",\r\n        \"translated_word\": \"汽车\"}}\r\n\r\nvar url = \"https://\" + window.location.host;\r\nfunction getAllTranslations(callback){\r\n    fetch(url + \"/getall\", {\r\n        method: \"GET\",\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n            // 'Content-Type': 'application/x-www-form-urlencoded',\r\n        }, \r\n        body:null \r\n    }).then(res => res.json()).then(function(resp){\r\n        console.log(resp);\r\n        callback(resp[\"result\"]);\r\n    }).catch(error => {\r\n        console.log(error);\r\n    });\r\n}\r\n\r\nexport default class FlashCards extends Component {\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n\r\n        this.state = {\r\n            flashcard: true,\r\n            currentWordIndex: 0, \r\n            words: {\"car\": {\r\n                \"definition\": [\r\n                  \"a motor vehicle with four wheels; usually propelled by an internal combustion engine\",\r\n                  \"the compartment that is suspended from an airship and that carries personnel and the cargo and the power plant\",\r\n                  \"where passengers ride up and down\",\r\n                  \"a wheeled vehicle adapted to the rails of railroad\",\r\n                  \"a conveyance for passengers or freight on a cable railway\"\r\n                ],\r\n                \"translated_pron\": \"Qìchē\",\r\n                \"translated_word\": \"汽车\"}},\r\n            wordsList: [\"car\"],\r\n            currentIndex: 0,\r\n            defs: [\r\n                \"a motor vehicle with four wheels; usually propelled by an internal combustion engine\",\r\n                \"the compartment that is suspended from an airship and that carries personnel and the cargo and the power plant\",\r\n                \"where passengers ride up and down\",\r\n                \"a wheeled vehicle adapted to the rails of railroad\",\r\n                \"a conveyance for passengers or freight on a cable railway\"]\r\n        }\r\n\r\n        this.interval = null;\r\n\r\n        this.handleWordClick = this.handleWordClick.bind(this);\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n        \r\n    }   \r\n\r\n    componentWillUnmount(){\r\n        clearInterval(this.interval);\r\n    }\r\n\r\n    updateData(){\r\n        getAllTranslations((resp) => {\r\n            console.log(resp);\r\n            this.setState({\r\n                words: resp,\r\n                wordsList: Object.keys(resp)\r\n            }, () => {\r\n                console.log(this.state);\r\n            })\r\n        })\r\n    }\r\n\r\n    handleWordClick(index){\r\n        this.setState({\r\n            currentIndex: index,\r\n            defs: this.state.words[this.state.wordsList[index]][\"definition\"]\r\n        })\r\n    }\r\n\r\n    next(e){\r\n        \r\n        var index = (this.state.currentIndex < this.state.wordsList.length - 1) ? this.state.currentIndex + 1 : 0;\r\n        this.setState({\r\n            defs: this.state.words[this.state.wordsList[index]][\"definition\"],\r\n            currentIndex: index\r\n        });\r\n    }\r\n\r\n    prev(e){\r\n        var index = (this.state.currentIndex > 0) ? this.state.currentIndex - 1 : this.state.wordsList.length - 1;\r\n        this.setState({\r\n            defs: this.state.words[this.state.wordsList[index]][\"definition\"],\r\n            currentIndex: index\r\n        });\r\n    }\r\n\r\n    handleFlashcard(){\r\n        this.setState({\r\n            flashcard: !this.state.flashcard\r\n        }, () => {\r\n            var flashcard = document.getElementById(\"flashcard-word\");\r\n            (!this.state.flashcard) ? flashcard.style.transform = \"rotateY(180deg)\" : flashcard.style.transform = \"rotateY(0)\";\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        var that = this;\r\n\r\n        var def = this.state.defs.map((d, i) =>\r\n            <div key = {i}>{(i + 1) + \". \" + d}</div> \r\n        )\r\n\r\n        var words = this.state.wordsList.map((d, i) => \r\n            <WordList key = {i} word = {d} index = {i} />\r\n        )\r\n\r\n        return (\r\n            <div className = \"flashcards\">\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={12}>\r\n                        <div className = \"maincontainer\">\r\n                            <div className = \"flashcard\" id = \"flashcard-word\" onClick = {this.handleFlashcard.bind(this)}>\r\n                                <div class=\"thefront\">\r\n                                    <div>\r\n                                        {that.state.wordsList[that.state.currentIndex]}\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"theback\">\r\n                                    <div>\r\n                                        {that.state.words[that.state.wordsList[that.state.currentIndex]][\"translated_word\"]}\r\n                                    </div>\r\n                                    <div className = \"partofspeech\">\r\n                                        {this.state.words[that.state.wordsList[that.state.currentIndex]][\"translated_pron\"]}\r\n                                    </div>\r\n                                </div>\r\n                                \r\n                            </div>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <div style = {{\r\n                            position: \"absolute\",\r\n                            top: \"50%\"\r\n                        }}>\r\n                            <div className = \"for-back\" onClick = {this.prev.bind(this)}>\r\n                                <Icon iconName = \"Back\"/>\r\n                            </div>\r\n                            <div className = \"for-back\" onClick = {this.next.bind(this)}>\r\n                                <Icon iconName = \"Forward\"/>\r\n                            </div>\r\n                        </div>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={6}>\r\n                        <div className = \"wordlist\">\r\n                            {words}\r\n                        </div>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={6}>\r\n                        <div className = \"word-definition\">\r\n                            <div className = \"word-def-title\">Definition</div>\r\n                            <div className = \"word-def-text\">{def}</div>\r\n                        </div>\r\n                    </Grid>\r\n                    \r\n                </Grid>\r\n                        <div className = \"bs-button\">\r\n                            <Button  variant=\"contained\" color = \"primary\" onClick = {this.updateData.bind(this)}>\r\n                                                    refresh\r\n                            </Button>\r\n                        </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction WordList(props){\r\n\r\n    return(\r\n        <div className = \"WordList\">\r\n            <h1>{props.word}</h1>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport WebCam from \"./WebCam.js\";\r\nimport FlashCards from \"./FlashCards.js\";\r\n\r\nimport AddAPhotoIcon from '@material-ui/icons/AddAPhoto';\r\nimport EmojiObjectsIcon from '@material-ui/icons/EmojiObjects';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\n\r\n\r\nimport { IStackTokens, Stack } from 'office-ui-fabric-react/lib/Stack';\r\nimport { Dropdown, DropdownMenuItemType, IDropdownStyles, IDropdownOption } from 'office-ui-fabric-react/lib/Dropdown';\r\n\r\n\r\nimport logo from \"./img/logo.png\";\r\n\r\nexport default class Main extends Component {\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            isFlashCards: false,\r\n            default: true,\r\n            isScan: false,\r\n            language: \"fr\"\r\n        }\r\n\r\n        this.background = this.background.bind(this);\r\n        this.background(this.state);\r\n\r\n        this.updateState = this.updateState.bind(this);\r\n\r\n        this.dropdownAction = this.dropdownAction.bind(this);\r\n    }\r\n\r\n    updateState(state){\r\n        console.log(state);\r\n        this.setState(state);\r\n    }\r\n\r\n    background(state){\r\n        console.log(\"state\", state);\r\n        var body = document.getElementsByTagName(\"BODY\")[0];\r\n        console.log(body.style);\r\n        body.style.animation = \"gradientFlow 5s infinite linear\";\r\n    }\r\n\r\n    dropdownAction(e, key){\r\n        console.log(key.key);\r\n        this.setState(\r\n            {\r\n                language: key.key\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className = \"Main\">\r\n                <div className = \"Main-container\">\r\n                    <div className = \"Main-content\">\r\n                        {this.state.isFlashCards && (<FlashCards/>)}\r\n                        {this.state.isScan && (<WebCam language = {this.state.language}/>)}\r\n                        {\r\n                            this.state.default && \r\n\r\n                        (\r\n                            <div className = \"main-buttons\">\r\n                                <div className = \"main-title\"><img src = {logo} height = {450} width = {600}/></div>\r\n                                <div className = \"main-content-button\">\r\n                                    <Button variant=\"contained\" color = \"primary\" onClick = {() => {\r\n        \r\n                                    this.setState({\r\n                                        isScan: true,\r\n                                        default: false\r\n                                    }, () => {\r\n                                        this.background(this.state);\r\n                                    })\r\n                                }}>\r\n                                        Scan\r\n                                    </Button>\r\n                                </div>\r\n                                <div className = \"main-content-button\">\r\n                                    <Button variant=\"contained\" color = \"secondary\" onClick = {() => {\r\n                                        this.setState({\r\n                                            default: false,\r\n                                            isScan: false,\r\n                                            isFlashCards: true\r\n                                        })\r\n                                    }}>\r\n                                        Practice\r\n                                    </Button>\r\n                                </div>\r\n                                <div className = \"main-drop-down\">\r\n                                    <DropDown action = {this.dropdownAction}/>\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className = \"navbar\">\r\n                    <SimpleBottomNavigation setState = {this.updateState}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n      width: \"100%\",\r\n    },\r\n  });\r\n\r\nfunction SimpleBottomNavigation(props) {\r\n    const classes = useStyles();\r\n  \r\n    var sets = {\r\n        0 : {   isFlashCards: false,\r\n                default: false,\r\n                isScan: true\r\n            },\r\n        1 : {   isFlashCards: false,\r\n            default: true,\r\n            isScan: false\r\n        },\r\n        2:  {   isFlashCards: true,\r\n            default: false,\r\n            isScan: false\r\n        } \r\n    }\r\n    return (\r\n      <BottomNavigation\r\n        onChange={(event, newValue) => {\r\n            props.setState(sets[newValue]);\r\n        }}\r\n        showLabels\r\n        className={classes.root}\r\n      >\r\n        <BottomNavigationAction label=\"Scan\"  icon = {<AddAPhotoIcon/>}/>\r\n        <BottomNavigationAction label=\"Home\"  icon = {<HomeIcon/>}/>\r\n        <BottomNavigationAction label=\"Practice\"  icon = {<EmojiObjectsIcon/>}/>\r\n      </BottomNavigation>\r\n    );\r\n  }\r\n\r\n  const dropdownStyles = {\r\n    dropdown: { width: 300 }\r\n  };\r\n  const stackTokens = { childrenGap: 20 };\r\nconst options = [\r\n    {\r\n        key: \"es\",\r\n        text: \"Spanish\"\r\n    },\r\n    {\r\n        key: \"fr\",\r\n        text: \"French\"\r\n    },\r\n    {\r\n        key: \"zh-cn\",\r\n        text: \"Chinese\"\r\n    },\r\n    {\r\n        key: \"ja\",\r\n        text: \"Japanese\"\r\n    },\r\n    {\r\n        key: \"ko\",\r\n        text: \"Korean\"\r\n    }\r\n  ];\r\n\r\nfunction DropDown(props){\r\n    return (\r\n        <Stack tokens={stackTokens}>\r\n          <Dropdown\r\n            onChange = {props.action}\r\n            placeHolder = \"Select\"\r\n            label=\"Select a Language\"\r\n            defaultSelectedKey=\"Spanish\"\r\n            options={options}\r\n            disabled={false}\r\n            styles={dropdownStyles}\r\n          />\r\n        </Stack>\r\n      );\r\n}","import React from 'react';\nimport logo from './logo.svg';\nimport Main from './Main.js';\nimport './App.css';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Main/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { initializeIcons } from '@uifabric/icons';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\ninitializeIcons();\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}